# Generated by Django 2.2.7 on 2020-12-04 23:44

from django.db import migrations
import jsonfield.fields


def drop_solar_configuration_params(apps, schema_editor):
    """
    Drops the SolarPVConfiguration models' `losses` and `system_capacity` fields
    as they are no longer used
    """
    SolarPVConfiguration = apps.get_model("simulation.SolarPVConfiguration")
    keys_to_drop = ["losses", "system_capacity"]
    for configuration in SolarPVConfiguration.objects.all():
        [configuration.parameters.pop(key, None) for key in keys_to_drop]

        # If there is already a configuration object with the remaining
        # parameters (within the same LSE), drop this one. This is so that
        # future calls to `get_or_create` don't fail because there's more than 1
        # configuration with the same params
        preexisting = SolarPVConfiguration.objects.filter(
            parameters=configuration.parameters,
            load_serving_entity=configuration.load_serving_entity,
        ).exists()

        if preexisting:
            configuration.delete()
        else:
            configuration.save()


class Migration(migrations.Migration):

    dependencies = [
        ("simulation", "0012_auto_20201204_2009"),
    ]

    operations = [
        migrations.AlterField(
            model_name="solarpvconfiguration",
            name="parameters",
            field=jsonfield.fields.JSONField(),
        ),
        migrations.AlterField(
            model_name="solarpvstrategy",
            name="parameters",
            field=jsonfield.fields.JSONField(),
        ),
        migrations.RunPython(
            drop_solar_configuration_params,
            reverse_code=migrations.RunPython.noop,
        ),
    ]

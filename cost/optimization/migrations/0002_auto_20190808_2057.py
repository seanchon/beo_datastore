# Generated by Django 2.2.2 on 2019-08-08 20:57

from django.db import migrations, models
import django.db.models.deletion

from cost.optimization.models import SimulationOptimization
from der.simulation.models import BatteryStrategy


def create_battery_strategies(apps, schema_editor):
    """
    Turn charge_schedule and discharge_schedule into BatteryStrategy.
    """
    for optimization in SimulationOptimization.objects.all():
        battery_strategy, _ = BatteryStrategy.objects.get_or_create(
            charge_schedule=optimization._charge_schedule,
            discharge_schedule=optimization._discharge_schedule,
        )
        battery_strategy.name = "Auto-created by Django migration."
        battery_strategy.save()

        optimization.battery_strategy = battery_strategy
        optimization.save()


class Migration(migrations.Migration):

    dependencies = [
        ("utility_rate", "0001_initial"),
        ("simulation", "0002_batterystrategy"),
        ("reference_model", "0001_initial"),
        ("optimization", "0001_initial"),
    ]

    operations = [
        migrations.RenameField(
            model_name="simulationoptimization",
            old_name="charge_schedule",
            new_name="_charge_schedule",
        ),
        migrations.RenameField(
            model_name="simulationoptimization",
            old_name="discharge_schedule",
            new_name="_discharge_schedule",
        ),
        migrations.AddField(
            model_name="simulationoptimization",
            name="battery_strategy",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="simulation_optimizations",
                to="simulation.BatteryStrategy",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="simulationoptimization",
            unique_together={
                (
                    "start",
                    "end_limit",
                    "battery_strategy",
                    "battery_configuration",
                    "load_serving_entity",
                    "rate_plan",
                )
            },
        ),
        migrations.RunPython(create_battery_strategies),
    ]

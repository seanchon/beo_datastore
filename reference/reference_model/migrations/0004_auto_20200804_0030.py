# Generated by Django 2.2.7 on 2020-08-04 00:30

from django.db import migrations, models


def relocate_der_total_fields(apps, schema_editor):
    """
    Copies the `pre_DER_total` and `post_DER_total` fields from the
    `StoredBatterySimulation` table to the `DERSimulation` table. The columns
    are appended with "_new" to avoid a name conflict. They will be renamed
    in the next migration, after the `StoredBatterySimulation` columns have been
    dropped.
    """
    DERSimulation = apps.get_model("reference_model.DERSimulation")
    StoredBatterySimulation = apps.get_model(
        "simulation.StoredBatterySimulation"
    )
    for battery_simulation in StoredBatterySimulation.objects.all():
        simulation = DERSimulation.objects.get(id=battery_simulation.id)
        simulation.post_DER_total_new = battery_simulation.post_DER_total
        simulation.pre_DER_total_new = battery_simulation.pre_DER_total
        simulation.save()


class Migration(migrations.Migration):

    dependencies = [
        ("reference_model", "0003_derstrategy_objective"),
        ("simulation", "0001_initial"),
    ]

    operations = [
        # make the new fields
        migrations.AddField(
            model_name="dersimulation",
            name="post_DER_total_new",
            field=models.FloatField(null=True),
        ),
        migrations.AddField(
            model_name="dersimulation",
            name="pre_DER_total_new",
            field=models.FloatField(null=True),
        ),
        # copy values over
        migrations.RunPython(
            relocate_der_total_fields, reverse_code=migrations.RunPython.noop
        ),
        # make them non-nullable
        migrations.AlterField(
            model_name="dersimulation",
            name="post_DER_total_new",
            field=models.FloatField(null=False),
        ),
        migrations.AlterField(
            model_name="dersimulation",
            name="pre_DER_total_new",
            field=models.FloatField(null=False),
        ),
    ]

packages:
  yum:
    git: []
    openssl-devel: []
    libcurl-devel: []
    jq: []

container_commands:
  # Reinstall PyCurl with correct ssl backend
  05_reinstall_pycurl:
    command: |
      pip install --upgrade pip
      pip uninstall -y pycurl
      pip install --global-option='--with-openssl' pycurl

  # Run customize script for celery initialization
  10_init_celery:
    command: |
      "deployment_scripts/init_celery.sh"

  15_init_logs:
    command: |
      "deployment_scripts/init_logs.sh"

  # Load static assets into S3
  20_collectstatic:
    command: "python manage.py collectstatic --noinput"
    leader_only: true

  # Destroy data and recreate environment (dev and staging only)
  # 30_recreate_environment:
  #   command: |
  #     if [ $APP_ENV == 'dev' ] || [ $APP_ENV == 'staging' ]; then
  #       python manage.py reset_db --noinput
  #       python manage.py migrate --noinput
  #       python manage.py runscript beo_datastore.scripts.load_data --script-args test
  #       echo "from django.contrib.auth import get_user_model; User = get_user_model(); User.objects.create_superuser('$SUPPORT_EMAIL', '$SUPPORT_EMAIL', '$SUPPORT_PASSWORD')" | python manage.py shell
  #     fi
  #   leader_only: true

  # Run database migrations
  40_migrate:
    command: "python manage.py migrate --noinput"
    leader_only: true

# Python packages with C extensions
files:
  # Run post_deploy script
  "/opt/elasticbeanstalk/hooks/appdeploy/post/99_restart_apps":
    mode: "000555"
    owner: root
    group: root
    content: |
      #!/bin/bash

      # access AWS environment variables
      source /opt/python/current/env

      if [ $WORKER == 1 ]; then
        /etc/init.d/celeryd restart
        /etc/init.d/celerybeat stop
        /etc/init.d/celerybeat start
      fi
      if [ $WORKER == 0 ]; then
        /etc/init.d/celeryd stop
        /etc/init.d/celerybeat stop
      fi

  "/etc/httpd/conf.d/wsgi_custom.conf":
    mode: "000644"
    owner: root
    group: root
    content: |
      WSGIApplicationGroup %{GLOBAL}

  # Pass authentication headers
  "/etc/httpd/conf.d/wsgi-enable-headers.conf":
    mode: "000644"
    owner: root
    group: root
    content: |
      WSGIPassAuthorization On

  # Redirect http traffic to https
  "/etc/httpd/conf.d/ssl_rewrite.conf":
    mode: "000644"
    owner: root
    group: root
    content: |
      RewriteEngine On
      <If "-n '%{HTTP:X-Forwarded-Proto}' && %{HTTP:X-Forwarded-Proto} != 'https'">
      RewriteRule (.*) https://%{HTTP_HOST}%{REQUEST_URI} [R,L]
      </If>

# Path to wsgi.py
option_settings:
  aws:elasticbeanstalk:container:python:
    WSGIPath: beo_datastore/wsgi.py

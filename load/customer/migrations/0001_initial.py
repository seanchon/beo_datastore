# Generated by Django 2.2.7 on 2020-03-04 22:33

import beo_datastore.libs.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_auto_repr
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("reference_model", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="ClusterClassifier",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                )
            ],
            options={"ordering": ["id"]},
            bases=(
                beo_datastore.libs.models.Frame288FileMixin,
                django_auto_repr.AutoRepr,
                models.Model,
            ),
        ),
        migrations.CreateModel(
            name="OriginFile",
            fields=[
                (
                    "metergroup_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="reference_model.MeterGroup",
                    ),
                ),
                ("file", models.FileField(upload_to="origin_files")),
                (
                    "expected_meter_count",
                    models.IntegerField(blank=True, null=True),
                ),
                ("md5sum", models.CharField(max_length=32)),
                (
                    "load_serving_entity",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="origin_files",
                        to="reference_model.LoadServingEntity",
                    ),
                ),
                (
                    "owners",
                    models.ManyToManyField(
                        blank=True,
                        related_name="origin_files",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={"ordering": ["id"]},
            bases=(
                beo_datastore.libs.models.IntervalFrameFileMixin,
                "reference_model.metergroup",
            ),
        ),
        migrations.CreateModel(
            name="CustomerPopulation",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=128)),
                (
                    "frame288_type",
                    models.CharField(
                        choices=[
                            ("average_frame288", "average_frame288"),
                            ("maximum_frame288", "maximum_frame288"),
                            ("minimum_frame288", "minimum_frame288"),
                            ("total_frame288", "total_frame288"),
                        ],
                        max_length=16,
                    ),
                ),
                ("normalize", models.BooleanField()),
                (
                    "load_serving_entity",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="customer_populations",
                        to="reference_model.LoadServingEntity",
                    ),
                ),
            ],
            options={"ordering": ["id"]},
            bases=(django_auto_repr.AutoRepr, models.Model),
        ),
        migrations.CreateModel(
            name="CustomerMeter",
            fields=[
                (
                    "meter_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="reference_model.Meter",
                    ),
                ),
                ("sa_id", models.BigIntegerField(db_index=True)),
                (
                    "rate_plan_name",
                    models.CharField(
                        blank=True, db_index=True, max_length=64, null=True
                    ),
                ),
                ("multiple_rate_plans", models.BooleanField(default=False)),
                (
                    "import_hash",
                    models.CharField(blank=True, max_length=64, null=True),
                ),
                (
                    "export_hash",
                    models.CharField(blank=True, max_length=64, null=True),
                ),
                (
                    "load_serving_entity",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="meters",
                        to="reference_model.LoadServingEntity",
                    ),
                ),
            ],
            options={
                "ordering": ["id"],
                "unique_together": {("import_hash", "export_hash")},
            },
            bases=("reference_model.meter",),
        ),
        migrations.CreateModel(
            name="CustomerCluster",
            fields=[
                (
                    "metergroup_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="reference_model.MeterGroup",
                    ),
                ),
                ("cluster_id", models.IntegerField()),
                (
                    "cluster_classifier",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="customer_cluster",
                        to="customer.ClusterClassifier",
                    ),
                ),
                (
                    "customer_population",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="customer_clusters",
                        to="customer.CustomerPopulation",
                    ),
                ),
                (
                    "meters",
                    models.ManyToManyField(
                        related_name="customer_clusters",
                        to="reference_model.Meter",
                    ),
                ),
            ],
            options={"ordering": ["id"]},
            bases=("reference_model.metergroup",),
        ),
        migrations.CreateModel(
            name="Channel",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("export", models.BooleanField(default=False)),
                (
                    "data_unit",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="channels",
                        to="reference_model.DataUnit",
                    ),
                ),
                (
                    "meter",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="channels",
                        to="customer.CustomerMeter",
                    ),
                ),
            ],
            options={
                "ordering": ["id"],
                "unique_together": {("export", "meter")},
            },
            bases=(
                beo_datastore.libs.models.IntervalFrameFileMixin,
                django_auto_repr.AutoRepr,
                models.Model,
            ),
        ),
    ]
